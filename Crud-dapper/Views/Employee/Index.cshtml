@using PagedList;
@using PagedList.Mvc;


@model IPagedList<Crud_dapper.Models.EmployeeModel>

@{
    ViewBag.Title = "Index";

    @*List<SelectListItem> l1= new List<SelectListItem>
            l1.Add(new SelectListItem { Text = "IT", Value = "IT" });
        l1.Add(new SelectListItem { Text = "IT", Value = "IT" });
        l1.Add(new SelectListItem { Text = "IT", Value = "IT" });*@

}

<h2><em>Employee List</em></h2>


   


   
            @Html.ActionLink("Deleted Employee", "DeletedEmployee", new { })|
      

            @Html.ActionLink("Create New", "AddOrEdit", new { })
<form asp-controller="Employee" asp-action="Index">

    <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />

    <input type="submit" value="Search" class="btn bg-primary" /> |

    @Html.ActionLink("Back to list", "Index")
</form> 


@*Html.TextBox("search")
    @Html.ActionLink("Search", "Index")
    < input type = "submit"
        name = "submit"
        value = "Search" / >*@

<div class="table-responsive custom-table-responsive">

    <table class="table table-hover">
        <tr class=" text-center text-primary bg-info">
            <th class="bg-info">
                SR. NO.
            </th>
            @* <th>
                    @Html.DisplayNameFor(model => model.EmployeeID)
                </th>*@
            <th class="bg-info " scope="col">

                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.SortingName })
            </th>
            <th class="bg-info" scope="col">
                @Html.ActionLink("Department", "Index", new { sortOrder = ViewBag.SortingDepartment })

            </th>
            <th class="bg-info" scope="col">
                @Html.DisplayNameFor(model => model.First().Gender)
            </th>
            <th class="bg-info " scope="col">
                @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.SortingEmail })
            </th>
            <th class="bg-info" scope="col">
                @Html.DisplayNameFor(model => model.First().Skills)
            </th>

            <th class="bg-info" scope="col"></th>
        </tr>
        @{ int i = 1; }
        @foreach (var item in Model)
        {
            <tr class="bg-warning">
                <td>
                    @i
                </td>
                @{ i++; }
                @*<td>
                        @Html.DisplayFor(modelItem => item.EmployeeID)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Skills)
                </td>
                <td>
                    @Html.ActionLink("Edit", "AddOrEdit", new { id = item.EmployeeID }, new { @class = "btn btn-success" }) |

                    @Html.ActionLink("Delete", "Delete", new { id = item.EmployeeID }, new { @class = "btn btn-danger" })

                    @*Html.ActionLink("Search", "Search", new { search = item.Search})*@

                </td>
            </tr>
        }

    </table>

    @Html.PagedListPager(Model, page => Url.Action("Index", new {page }) )
</div>